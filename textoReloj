   return page1;
} // fin del método getPage1
public void setPage1(Page p)
{
   this.page1 = p;
} // fin del método setPage1
private Html html1 = new Html();
public Html getHtml1()
{
   return html1;
} // fin del método getHtml1
public void setHtml1(Html h)
{
   this.html1 = h;
} // fin del método setHtml1
private Head head1 = new Head();
public Head getHead1()
{
   return head1;
} // fin del método getHead1
public void setHead1(Head h) 
{
   this.head1 = h;
} // fin del método setHead1
private Link link1 = new Link();
public Link getLink1()
{
   return link1;
} // fin del método getLink1
public void setLink1(Link l) 
{
   this.link1 = l;
} // fin del método setLink1
private Body body1 = new Body();
public Body getBody1()
{
   return body1;
} // fin del método getBody1
public void setBody1(Body b)
{
   this.body1 = b;
} // fin del método setBody1
private Form form1 = new Form();
public Form getForm1()
{ 
super.init();    
  try
  {
  _init(); 
     } // ﬁn de try 
  catch ( Exception e )    
  { 
  log( "Error al inicializar Hora", e ); 
  throw e instanceof FacesException ? ( FacesException ) e: 
   new FacesException( e );
   } // ﬁn de catch
 } // ﬁn del método init 
 // método que se llama cuando ocurre una petición de devolución de envío 
 public void preprocess()
 {
 // cuerpo vacío
 } // ﬁn del método preprocess
 // método al que se llama antes de desplegar la página
 public void prerender()
 {
   textoReloj.setValue( DateFormat.getTimeInstance(
      DateFormat.LONG ).format( new Date() ) ); 
  } // ﬁn del método prerende
  // método al que se llama una vez que se completa el despliegue, si se llamó a init 
   public void destroy() 
   {
   // cuerpo vacío 
   } // ﬁn del método destroy
  } // ﬁn de la clase Hora
